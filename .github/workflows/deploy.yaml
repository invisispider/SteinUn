name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version}}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    # - run: npm test:unit
    # - run: npm test:e2e
    - run: npm run build
  deploy:
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout code
        # uses: actions/checkout@v4

      # - name: Set up Node.js
        # using: 'node20'
        # uses: actions/setup-node@v4
        # with:
          # node-version: '20'

      # - name: Install dependencies
        # run: npm install
      # - name: Build vite app to dist
        # run: npm run build
            #  npm install -g firebase-tools

      - name: Build and deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_STEIN_UNLIMITED }}"
          projectId: stein-unlimited
        # run: |
          # firebase deploy --only hosting
        # env:
          # FIREBASE_TOKEN: ${{ secrets.FIREBASE_GITHUB_TOKEN }}
          

# pulls (https://medium.com/js-dojo/ci-cd-with-vue-firebase-hosting-and-github-actions-3fb0afa81314)
# <https://github.com/firebase/firebase-tools>
# "If you want to prevent (which I think you should) merging pull requests with failing unit or e2e tests to master, you should add a Branch protection rule. For that, go to the Settings tab in your Github repository. Select Branches from the left-side menu. And under Branch protection rules header, select Add rule. "

# name: Deploy to Firebase Hosting on PR
# "on": pull_request
# jobs:
#   unit_test:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - run: npm ci && npm run test:unit
#   e2e_test:
#     timeout-minutes: 10
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - uses: actions/setup-node@v4
#       with:
#         node-version: lts/*
#     - name: Install dependencies
#       run: npm ci
#     - name: Install Playwright Browsers
#       run: npx playwright install --with-deps
#     - name: Run Playwright tests
#       run: npx playwright test
#     - uses: actions/upload-artifact@v4
#       if: always()
#       with:
#         name: playwright-report
#         path: playwright-report/
#         retention-days: 30
  # e2e_test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Cypress run
  #       uses: cypress-io/github-action@v2
  #       with:
  #         start: npm run serve
  #         wait-on: <http://localhost:8080/>
  #         config_file: cypress.json
  #         spec: "tests/e2e/**/*"
  #       env:
  #         CYPRESS_baseUrl: <http://localhost:8080/>
  # build_and_preview:
  #   needs: [unit_test, e2e_test]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: npm ci && npm run build
  #     - uses: FirebaseExtended/action-hosting-deploy@v0
  #       with:
  #         repoToken: "${{ secrets.GITHUB_TOKEN }}"
  #         firebaseServiceAccount: #REFERENCE TO FIREBASE SERVICE 
